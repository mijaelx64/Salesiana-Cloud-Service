//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileInformation", Namespace="http://schemas.datacontract.org/2004/07/Salesiana.Cloud.Service")]
    [System.SerializableAttribute()]
    public partial class FileInformation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((object.ReferenceEquals(this.LastModifiedField, value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SalesianaCloudTransferService.ITransferService")]
    public interface ITransferService {
        
        // CODEGEN: Generating message contract since the wrapper name (DownloadRequest) of message DownloadRequest does not match the default value (DownloadFile)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/DownloadFile", ReplyAction="http://tempuri.org/ITransferService/DownloadFileResponse")]
        Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.RemoteFileInfo DownloadFile(Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.DownloadRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/DownloadFile", ReplyAction="http://tempuri.org/ITransferService/DownloadFileResponse")]
        System.Threading.Tasks.Task<Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.RemoteFileInfo> DownloadFileAsync(Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.DownloadRequest request);
        
        // CODEGEN: Generating message contract since the operation UploadFile is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/UploadFile", ReplyAction="http://tempuri.org/ITransferService/UploadFileResponse")]
        Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.UploadFileResponse UploadFile(Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.RemoteFileInfo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/UploadFile", ReplyAction="http://tempuri.org/ITransferService/UploadFileResponse")]
        System.Threading.Tasks.Task<Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.UploadFileResponse> UploadFileAsync(Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.RemoteFileInfo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/FolderInformation", ReplyAction="http://tempuri.org/ITransferService/FolderInformationResponse")]
        System.IO.DirectoryInfo FolderInformation();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/FolderInformation", ReplyAction="http://tempuri.org/ITransferService/FolderInformationResponse")]
        System.Threading.Tasks.Task<System.IO.DirectoryInfo> FolderInformationAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/Files", ReplyAction="http://tempuri.org/ITransferService/FilesResponse")]
        Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.FileInformation[] Files();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITransferService/Files", ReplyAction="http://tempuri.org/ITransferService/FilesResponse")]
        System.Threading.Tasks.Task<Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.FileInformation[]> FilesAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DownloadRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class DownloadRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string FileName;
        
        public DownloadRequest() {
        }
        
        public DownloadRequest(string FileName) {
            this.FileName = FileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoteFileInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoteFileInfo {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long Length;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public RemoteFileInfo() {
        }
        
        public RemoteFileInfo(string FileName, long Length, System.IO.Stream FileByteStream) {
            this.FileName = FileName;
            this.Length = Length;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadFileResponse {
        
        public UploadFileResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITransferServiceChannel : Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.ITransferService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransferServiceClient : System.ServiceModel.ClientBase<Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.ITransferService>, Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.ITransferService {
        
        public TransferServiceClient() {
        }
        
        public TransferServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransferServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransferServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransferServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.RemoteFileInfo Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.ITransferService.DownloadFile(Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.DownloadRequest request) {
            return base.Channel.DownloadFile(request);
        }
        
        public long DownloadFile(ref string FileName, out System.IO.Stream FileByteStream) {
            Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.DownloadRequest inValue = new Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.DownloadRequest();
            inValue.FileName = FileName;
            Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.RemoteFileInfo retVal = ((Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.ITransferService)(this)).DownloadFile(inValue);
            FileName = retVal.FileName;
            FileByteStream = retVal.FileByteStream;
            return retVal.Length;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.RemoteFileInfo> Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.ITransferService.DownloadFileAsync(Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.DownloadRequest request) {
            return base.Channel.DownloadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.RemoteFileInfo> DownloadFileAsync(string FileName) {
            Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.DownloadRequest inValue = new Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.DownloadRequest();
            inValue.FileName = FileName;
            return ((Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.ITransferService)(this)).DownloadFileAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.UploadFileResponse Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.ITransferService.UploadFile(Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.RemoteFileInfo request) {
            return base.Channel.UploadFile(request);
        }
        
        public void UploadFile(string FileName, long Length, System.IO.Stream FileByteStream) {
            Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.RemoteFileInfo inValue = new Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.RemoteFileInfo();
            inValue.FileName = FileName;
            inValue.Length = Length;
            inValue.FileByteStream = FileByteStream;
            Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.UploadFileResponse retVal = ((Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.ITransferService)(this)).UploadFile(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.UploadFileResponse> Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.ITransferService.UploadFileAsync(Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.RemoteFileInfo request) {
            return base.Channel.UploadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.UploadFileResponse> UploadFileAsync(string FileName, long Length, System.IO.Stream FileByteStream) {
            Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.RemoteFileInfo inValue = new Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.RemoteFileInfo();
            inValue.FileName = FileName;
            inValue.Length = Length;
            inValue.FileByteStream = FileByteStream;
            return ((Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.ITransferService)(this)).UploadFileAsync(inValue);
        }
        
        public System.IO.DirectoryInfo FolderInformation() {
            return base.Channel.FolderInformation();
        }
        
        public System.Threading.Tasks.Task<System.IO.DirectoryInfo> FolderInformationAsync() {
            return base.Channel.FolderInformationAsync();
        }
        
        public Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.FileInformation[] Files() {
            return base.Channel.Files();
        }
        
        public System.Threading.Tasks.Task<Salesiana.Cloud.ServiceManager.SalesianaCloudTransferService.FileInformation[]> FilesAsync() {
            return base.Channel.FilesAsync();
        }
    }
}
